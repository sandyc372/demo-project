{"version":3,"sources":["config/environments.ts","components/EnvironmentList/EnvironmentList.tsx","components/EnvironmentList/EnvironmentContext.tsx","components/ApplicationList/ApplicationList.tsx","apis/applicationDataApi.tsx","config/constants.ts","components/MasterClientSelector/MasterClientSelector.tsx","components/MasterData/MasterData.tsx","components/ApplicationData/ApplicationData.tsx","components/EnvironmentList/withEnvironment.tsx","pages/Get/MainPage.tsx","apis/applicationsApi.tsx","config/routes.tsx","pages/Create/CreatePage.tsx","components/NavBar/NavBar.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["dev","qa","prod","local","EnvironmentList","props","className","environemnts","onEnvironmentSelect","list","property","push","key","onClick","renderEnvironments","environments","EnvironmentContext","React","createContext","environment","undefined","ApplicationList","selectedApplicationName","this","selectedApplication","applicationName","style","maxHeight","window","innerHeight","overflowY","applications","map","application","index","handeApplicationSelect","Component","data","getApplicationData","clientId","Promise","resolve","reject","setTimeout","DATA_TYPES","MasterClientSelector","onMasterSelect","type","masterButtonText","onClientSelect","clientButtonText","MasterData","state","isFetching","error","getMasterData","setState","result","then","catch","e","Result","role","Error","Form","forwardRef","ref","onSubmit","event","preventDefault","placeholder","textAlign","id","ApplicationData","isLoadingResult","dataType","createRef","prevProps","current","value","setDataType","CLIENT_DATA","MASTER_DATA","handleFormSubmit","WrappedComponent","Consumer","withEnvironment","applicationData","isLoadingApplications","i","otherData","slice","arg","routes","path","component","MainPage","label","NavBar","route","children","match","to","Routes","App","selectedEnvironment","console","log","Provider","handleEnvironmentSelect","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gRAAe,GACbA,IAAK,MACLC,GAAI,KACJC,KAAM,OACNC,MAAO,SCeF,IAAMC,EAA+C,SAAUC,GACpE,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,kCACA,yBAAKA,UAAU,aACb,wBAAIA,UAAU,+BAxB5B,SAA4BC,EAAmBC,GAC7C,IAAIC,EAAO,GADoH,WAEtHC,GACPD,EAAKE,KACH,4BACEL,UAAS,yCACTM,IAAKL,EAAaG,GAClBG,QAAS,WAAQL,EAAoBD,EAAaG,MAEjDH,EAAaG,MAPpB,IAAK,IAAIA,KAAYH,EAAe,EAA3BG,GAWT,OAAOD,EAYSK,CAAmBT,EAAMU,aAAcV,EAAMG,4BCzBlDQ,EAAqBC,IAAMC,cAAc,CACpDC,iBAAaC,I,2BCFMC,E,iLACT,IAAD,OACHC,EAA0BC,KAAKlB,MAAMmB,oBAAsBD,KAAKlB,MAAMmB,oBAAoBC,gBAAkB,KAChH,OACE,yBAAKnB,UAAU,mBAAmBoB,MAAO,CAAEC,UAAWC,OAAOC,YAAaC,UAAW,WAEjFP,KAAKlB,MAAM0B,aAAaC,KAAI,SAACC,EAAkBC,GAAnB,OAC5B,4BACE5B,UAAS,2EAAsEgB,IAA4BW,EAAYR,gBAAkB,SAAW,IACpJb,IAAKsB,EACLrB,QAAS,WAAQ,EAAKR,MAAM8B,uBAAuBF,KAEjDA,EAAYR,yB,GAZmBW,aCFzCC,EAAO,CACT,UAAW,CACT,QAAW,CACT,CACE,eAAgB,WAChB,gBAAiB,2BACjB,aAAc,CACZ,gCAAiC,mBACjC,4BAA6B,gBAC7B,2BAA4B,QAC5B,+BAAgC,oBAChC,4BAA6B,kBAC7B,uBAA0B,4BAC1B,oBAAuB,gCACvB,aAAgB,YAChB,qBAAwB,GACxB,oBAAuB,mBACvB,oBAAuB,sBACvB,QAAU,EACV,gBAAmB,mBACnB,gBAAmB,sBACnB,sBAAyB,IACzB,sBAAyB,IACzB,wBAA2B,GAC3B,oBAAuB,IACvB,oBAAuB,GACvB,sBAAyB,GACzB,gBAAmB,IACnB,gBAAmB,IACnB,kBAAqB,GACrB,oBAAuB,GACvB,yBAA4B,2BAC5B,yBAA4B,uBAC5B,qBAAwB,oBACxB,cAAgB,EAChB,eAAkB,yBAClB,iBAAoB,2BACpB,cAAiB,QACjB,gBAAmB,+CACnB,aAAgB,8DAChB,cAAiB,KACjB,kBAAqB,qBACrB,mBAAsB,qCACtB,iBAAoB,uCACpB,mBAAsB,GACtB,kBAAqB,IACrB,wBAA2B,IAC3B,kBAAqB,QACrB,aAAgB,MAGpB,CACE,eAAgB,aAChB,gBAAiB,6BACjB,aAAc,CACZ,SAAY,QACZ,iBAAoB,UAGxB,CACE,eAAgB,aAChB,gBAAiB,8BAGnB,CACE,eAAgB,cAChB,gBAAiB,6BAEnB,CACE,eAAgB,aAChB,gBAAiB,kCACjB,aAAc,CACZ,aAAgB,kBAChB,IAAO,EACP,YAAe,wCACf,WAAc,GACd,QAAW,EACX,gBAAmB,qCACnB,eAAkB,GAClB,gBAAmB,wCACnB,oBAAuB,4CACvB,mBAAsB,uDACtB,cAAiB,EACjB,aAAgB,EAChB,YAAc,KAGpB,kBAAmB,CACjB,SAAY,IACZ,WAAc,sBACd,WAAc,WACd,YAAe,YACf,WAAc,YAGhB,OAAU,CACR,aAAc,YACd,kBAAmB,6BAKlB,SAASC,EAAmBC,EAAed,GAChD,OAAO,IAAIe,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTF,EAAQJ,KACP,Q,IC1GKO,E,iBCGCC,G,MAAb,iLACY,IAAD,OACP,OACE,yBAAKvC,UAAU,OACb,yBAAKA,UAAU,yBACb,4BACEO,QAAS,kBAAM,EAAKR,MAAMyC,kBAC1BC,KAAK,SACLzC,UAAU,wBAERiB,KAAKlB,MAAM2C,mBAGjB,yBAAK1C,UAAU,8BACb,4BACEO,QAAS,kBAAM,EAAKR,MAAM4C,kBAC1BF,KAAK,SACLzC,UAAU,wBAERiB,KAAKlB,MAAM6C,wBAnBzB,GAA0CjC,IAAMmB,YCCnCe,EAAb,YACE,WAAY9C,GAAa,IAAD,8BACtB,4CAAMA,KACD+C,MAAQ,CACXf,KAAM,KACNgB,YAAY,EACZC,MAAO,MALa,EAD1B,iFAWI/B,KAAKgC,kBAXT,sCAcmB,IAAD,OACdhC,KAAKiC,SAAS,CACZH,YAAY,EACZI,OAAQ,KACRH,MAAO,OAEThB,EAAmB,EAAIf,KAAKlB,MAAMmB,oBAAoBC,iBACnDiC,MAAK,SAACrB,GACL,EAAKmB,SAAS,CACZnB,KAAMA,EACNgB,YAAY,EACZC,MAAO,UAGVK,OAAM,SAACC,GACN,EAAKJ,SAAS,CACZnB,KAAM,KACNgB,YAAY,EACZC,MAAOM,SAhCjB,+BAsCI,OAAOrC,KAAK6B,MAAMf,KACf,kBAACwB,EAAD,CAAQxB,KAAMd,KAAK6B,MAAMf,OACxBd,KAAK6B,MAAMC,WACV,yBAAK/C,UAAU,sBAAsBwD,KAAK,SAA1C,oBAGCvC,KAAK6B,MAAME,MAAS,kBAACS,EAAD,MAAa,SA5C3C,GAAgC9C,IAAMmB,Y,SFJ1BQ,O,6BAAAA,I,8BAAAA,M,KGQZ,IAAMoB,EAAO/C,IAAMgD,YAAW,SAAC5D,EAAY6D,GACzC,OACE,0BAAMC,SAAU,SAACC,GACf/D,EAAM8D,WACNC,EAAMC,mBAEN,yBAAK/D,UAAU,mCACb,2BAAOyC,KAAK,OAAOmB,IAAKA,EAAK5D,UAAU,eAAegE,YAAY,oBAClE,yBAAKhE,UAAU,sBACb,4BAAQA,UAAU,4BAA4ByC,KAAK,UAAnD,gBAOH,SAASc,EAAOxD,GACrB,OACE,yBAAKqB,MAAO,CAAE6C,UAAW,OAAQzC,UAAW,SAAUH,UAAWC,OAAOC,cACtE,kBAAC,IAAD,CAAY2C,GAAG,cAAcnC,KAAMhC,EAAMgC,QAKxC,SAAS0B,EAAM1D,GACpB,OACE,yBAAKC,UAAU,qBAAqBwD,KAAK,SAAzC,qB,IAMiBW,E,YAEnB,WAAYpE,GAAa,IAAD,8BACtB,4CAAMA,KAFD6D,SACiB,EAEtB,EAAKd,MAAQ,CACXb,SAAU,KACVkB,OAAQ,KACRiB,iBAAiB,EACjBC,SAAU,MAEZ,EAAKT,IAAMjD,IAAM2D,YARK,E,gFAWLC,GACbtD,KAAKlB,MAAMmB,oBAAoBC,kBAAoBoD,EAAUrD,oBAAoBC,iBACnFF,KAAKiC,SAAS,CACZjB,SAAU,KACVkB,OAAQ,KACRiB,iBAAiB,EACjBC,SAAU,S,yCAKI,IAAD,OACjBpD,KAAKiC,SAAS,CACZkB,iBAAiB,EACjBjB,OAAQ,KACRH,MAAO,OAEThB,EAAmBf,KAAK2C,IAAIY,QAAQC,MAAOxD,KAAKlB,MAAMmB,oBAAoBC,iBACvEiC,MAAK,SAACrB,GACL,EAAKmB,SAAS,CACZC,OAAQpB,EACRqC,iBAAiB,EACjBpB,MAAO,UAGVK,OAAM,SAACC,GACN,EAAKJ,SAAS,CACZC,OAAQ,KACRiB,iBAAiB,EACjBpB,MAAOM,S,kCAKHe,GACVpD,KAAKiC,SAAS,CACZmB,e,+BAIM,IAAD,OACP,OACE,oCAE4B,OAAxBpD,KAAK6B,MAAMuB,SAEP,kBAAC,EAAD,CACEzB,iBAAiB,kBACjBF,iBAAiB,kBACjBC,eAAgB,WAAQ,EAAK+B,YAAYpC,EAAWqC,cACpDnC,eAAgB,WAAQ,EAAKkC,YAAYpC,EAAWsC,gBAGtD3D,KAAK6B,MAAMuB,WAAa/B,EAAWsC,YAClC,kBAAC,EAAD,CAAY1D,oBAAqBD,KAAKlB,MAAMmB,sBAE3C,oCACE,kBAACwC,EAAD,CACEE,IAAK3C,KAAK2C,IACVC,SAAU,WAAQ,EAAKgB,sBAGvB5D,KAAK6B,MAAMK,OACR,kBAACI,EAAD,CAAQxB,KAAMd,KAAK6B,MAAMK,SACxBlC,KAAK6B,MAAMsB,gBACV,yBAAKpE,UAAU,sBAAsBwD,KAAK,SAA1C,oBAGCvC,KAAK6B,MAAME,MAAS,kBAACS,EAAD,MAAa,W,GAjFd3B,aCrC9B,WAAUgD,GACvB,OAAO,WACL,OACE,kBAACpE,EAAmBqE,SAApB,MAEI,gBAAGlE,EAAH,EAAGA,YAAH,OACE,kBAACiE,EAAD,CAAkBjE,YAAaA,SC6E5BmE,IA/Ef,YACE,WAAYjF,GAAa,IAAD,8BACtB,4CAAMA,KACD+C,MAAQ,CACXrB,aAAc,GACdwD,gBAAiB,KACjBC,uBAAuB,EACvBhE,oBAAqB,MAND,EAD1B,iFAWuB,IAAD,OCjBb,IAAIgB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WAET,IADA,IAAIN,EAAO,GACFoD,EAAI,EAAGA,EAAI,GAAIA,IACtBpD,EAAK1B,KAAK,CACRc,gBAAgB,eAAD,OAAiBgE,EAAE,GAClCC,UAAW,eAGfjD,EAAQJ,KACP,QDSAqB,MAAK,SAACrB,GACLA,EAAOA,EAAKsD,QACZ,EAAKnC,SAAS,CACZgC,uBAAuB,EACvBzD,aAAcM,OAGjBsB,OAAM,iBApBb,6CAuByB1B,GACrBV,KAAKiC,SAAS,CACZhC,oBAAoB,eAAMS,OAzBhC,+BA6BY,IAAD,OACP,OACE,yBAAK3B,UAAU,mBACb,yBAAKA,UAAU,OAEXiB,KAAK6B,MAAMoC,sBACT,yBAAKlF,UAAU,aACb,yBAAKA,UAAU,sBAAsBwD,KAAK,SAA1C,6BAKA,oCACE,yBAAKxD,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eAAf,kBACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,CACEyB,aAAcR,KAAK6B,MAAMrB,aACzBP,oBAAqBD,KAAK6B,MAAM5B,oBAChCW,uBAAwB,SAACyD,GAAe,EAAKzD,uBAAuByD,SAK5E,yBAAKtF,UAAU,YAEXiB,KAAK6B,MAAM5B,oBAEP,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,eAAeiB,KAAK6B,MAAM5B,oBAAoBC,iBAC7D,yBAAKnB,UAAU,aACb,kBAAC,EAAD,CACEkB,oBAAqBD,KAAK6B,MAAM5B,wBAKtC,aAnE1B,GAA8BY,cEJjByD,EAAS,CAAC,CACrBC,KAAM,OACNC,UAAWC,EACXC,MAAO,OACN,CACDH,KAAM,UACNC,UCAaT,EANf,iLAEI,MAAO,SAAW/D,KAAKlB,MAAMc,gBAFjC,GAAgCF,IAAMmB,YDOpC6D,MAAO,UACN,CACDH,KAAM,UACNC,UAAWC,EACXC,MAAO,UACN,CACDH,KAAM,UACNC,UAAWC,EACXC,MAAO,WEdF,SAASC,EAAO7F,GACrB,OACE,yBAAKC,UAAU,sDACb,yBAAKA,UAAU,2BAA2BkE,GAAG,aAC3C,wBAAIlE,UAAU,cAEVuF,EAAO7D,KAAI,SAACmE,EAAOjE,GAAR,OACT,kBAAC,IAAD,CACEtB,IAAKsB,EACL4D,KAAMK,EAAML,KACZM,SAAU,gBAAGC,EAAH,EAAGA,MAAH,OACR,wBAAI/F,UAAS,mBAAc+F,EAAQ,mCAAqC,KACtE,0BAAM/F,UAAU,YAAW,kBAAC,IAAD,CAAMgG,GAAIH,EAAML,MAAOK,EAAMF,kBCXrE,IAAMM,EAAb,iLAEI,OACE,kBAAC,IAAD,KACE,kBAACL,EAAD,MACA,kBAAC,IAAD,KAEIL,EAAO7D,KAAI,SAACmE,EAAOjE,GAAR,OACT,kBAAC,IAAD,CAAO4D,KAAMK,EAAML,KAAMlF,IAAKsB,GAC5B,kBAACiE,EAAMJ,UAAP,UAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUO,GAAG,gBAdzB,GAA4BrF,IAAMmB,WCGboE,G,kBACnB,WAAYnG,GAAa,IAAD,8BACtB,4CAAMA,KACD+C,MAAQ,CACXjC,YAAa,MAHO,E,qFAOAsF,GACtBC,QAAQC,IAAIF,GACZlF,KAAKiC,SAAS,CACZrC,YAAasF,M,+BAIP,IAAD,OACP,OAAOlF,KAAK6B,MAAMjC,YAChB,kBAACH,EAAmB4F,SAApB,CAA6B7B,MAAOxD,KAAK6B,OACvC,kBAAC,EAAD,OAIF,yBAAK9C,UAAU,OACb,kBAAC,EAAD,CACES,aAAcA,EACdP,oBAAqB,SAACiG,GAAD,OAAiC,EAAKI,wBAAwBJ,W,GAzB5DxF,IAAMmB,YCInB0E,QACW,cAA7BlF,OAAOmF,SAASC,UAEe,UAA7BpF,OAAOmF,SAASC,UAEhBpF,OAAOmF,SAASC,SAASX,MACvB,2DCZNY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7D,MAAK,SAAA8D,GACjCA,EAAaC,kB","file":"static/js/main.25d57dff.chunk.js","sourcesContent":["export default {\r\n  dev: \"dev\",\r\n  qa: \"qa\",\r\n  prod: \"prod\",\r\n  local: \"local\"\r\n}","import React from 'react';\r\nimport { IEnvironmentProps } from './IEnvironmentList';\r\n\r\nfunction renderEnvironments(environemnts: any, onEnvironmentSelect: (selectedEnvironment: string) => void): React.ReactElement[] {\r\n  let list = [];\r\n  for (let property in environemnts) {\r\n    list.push(\r\n      <button\r\n        className={`list-group-item list-group-item-action`}\r\n        key={environemnts[property]}\r\n        onClick={() => { onEnvironmentSelect(environemnts[property]) }}\r\n      >\r\n        {environemnts[property]}\r\n      </button>\r\n    )\r\n  }\r\n  return list;\r\n}\r\n\r\nexport const EnvironmentList: React.FC<IEnvironmentProps> = function (props: IEnvironmentProps) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 mx-auto\">\r\n          <div className=\"card mt-5\">\r\n            <h6 className=\"card-header\">Please select your environment</h6>\r\n            <div className=\"card-body\">\r\n              <ul className=\"list-group list-group-flush\">\r\n                { renderEnvironments(props.environments, props.onEnvironmentSelect) }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { IAppState } from '../../IApp';\r\n\r\nexport const EnvironmentContext = React.createContext({\r\n  environment: undefined\r\n} as IAppState);","import React, { Component } from 'react';\r\n\r\nexport default class ApplicationList extends Component<any, any>{\r\n  render() {\r\n    let selectedApplicationName = this.props.selectedApplication ? this.props.selectedApplication.applicationName : null;\r\n    return (\r\n      <div className=\"list-group-flush\" style={{ maxHeight: window.innerHeight, overflowY: 'scroll'}}>\r\n        {\r\n          this.props.applications.map((application: any, index: number) => (\r\n          <button\r\n            className={`list-group-item list-group-item list-group-item-action text-left ${selectedApplicationName === application.applicationName ? 'active' : ''}`}\r\n            key={index}\r\n            onClick={() => { this.props.handeApplicationSelect(application)}}\r\n          >\r\n            { application.applicationName }\r\n          </button>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","let data = {\r\n  \"web-app\": {\r\n    \"servlet\": [\r\n      {\r\n        \"servlet-name\": \"cofaxCDS\",\r\n        \"servlet-class\": \"org.cofax.cds.CDSServlet\",\r\n        \"init-param\": {\r\n          \"configGlossary:installationAt\": \"Philadelphia, PA\",\r\n          \"configGlossary:adminEmail\": \"ksm@pobox.com\",\r\n          \"configGlossary:poweredBy\": \"Cofax\",\r\n          \"configGlossary:poweredByIcon\": \"/images/cofax.gif\",\r\n          \"configGlossary:staticPath\": \"/content/static\",\r\n          \"templateProcessorClass\": \"org.cofax.WysiwygTemplate\",\r\n          \"templateLoaderClass\": \"org.cofax.FilesTemplateLoader\",\r\n          \"templatePath\": \"templates\",\r\n          \"templateOverridePath\": \"\",\r\n          \"defaultListTemplate\": \"listTemplate.htm\",\r\n          \"defaultFileTemplate\": \"articleTemplate.htm\",\r\n          \"useJSP\": false,\r\n          \"jspListTemplate\": \"listTemplate.jsp\",\r\n          \"jspFileTemplate\": \"articleTemplate.jsp\",\r\n          \"cachePackageTagsTrack\": 200,\r\n          \"cachePackageTagsStore\": 200,\r\n          \"cachePackageTagsRefresh\": 60,\r\n          \"cacheTemplatesTrack\": 100,\r\n          \"cacheTemplatesStore\": 50,\r\n          \"cacheTemplatesRefresh\": 15,\r\n          \"cachePagesTrack\": 200,\r\n          \"cachePagesStore\": 100,\r\n          \"cachePagesRefresh\": 10,\r\n          \"cachePagesDirtyRead\": 10,\r\n          \"searchEngineListTemplate\": \"forSearchEnginesList.htm\",\r\n          \"searchEngineFileTemplate\": \"forSearchEngines.htm\",\r\n          \"searchEngineRobotsDb\": \"WEB-INF/robots.db\",\r\n          \"useDataStore\": true,\r\n          \"dataStoreClass\": \"org.cofax.SqlDataStore\",\r\n          \"redirectionClass\": \"org.cofax.SqlRedirection\",\r\n          \"dataStoreName\": \"cofax\",\r\n          \"dataStoreDriver\": \"com.microsoft.jdbc.sqlserver.SQLServerDriver\",\r\n          \"dataStoreUrl\": \"jdbc:microsoft:sqlserver://LOCALHOST:1433;DatabaseName=goon\",\r\n          \"dataStoreUser\": \"sa\",\r\n          \"dataStorePassword\": \"dataStoreTestQuery\",\r\n          \"dataStoreTestQuery\": \"SET NOCOUNT ON;select test='test';\",\r\n          \"dataStoreLogFile\": \"/usr/local/tomcat/logs/datastore.log\",\r\n          \"dataStoreInitConns\": 10,\r\n          \"dataStoreMaxConns\": 100,\r\n          \"dataStoreConnUsageLimit\": 100,\r\n          \"dataStoreLogLevel\": \"debug\",\r\n          \"maxUrlLength\": 500\r\n        }\r\n      },\r\n      {\r\n        \"servlet-name\": \"cofaxEmail\",\r\n        \"servlet-class\": \"org.cofax.cds.EmailServlet\",\r\n        \"init-param\": {\r\n          \"mailHost\": \"mail1\",\r\n          \"mailHostOverride\": \"mail2\"\r\n        }\r\n      },\r\n      {\r\n        \"servlet-name\": \"cofaxAdmin\",\r\n        \"servlet-class\": \"org.cofax.cds.AdminServlet\"\r\n      },\r\n\r\n      {\r\n        \"servlet-name\": \"fileServlet\",\r\n        \"servlet-class\": \"org.cofax.cds.FileServlet\"\r\n      },\r\n      {\r\n        \"servlet-name\": \"cofaxTools\",\r\n        \"servlet-class\": \"org.cofax.cms.CofaxToolsServlet\",\r\n        \"init-param\": {\r\n          \"templatePath\": \"toolstemplates/\",\r\n          \"log\": 1,\r\n          \"logLocation\": \"/usr/local/tomcat/logs/CofaxTools.log\",\r\n          \"logMaxSize\": \"\",\r\n          \"dataLog\": 1,\r\n          \"dataLogLocation\": \"/usr/local/tomcat/logs/dataLog.log\",\r\n          \"dataLogMaxSize\": \"\",\r\n          \"removePageCache\": \"/content/admin/remove?cache=pages&id=\",\r\n          \"removeTemplateCache\": \"/content/admin/remove?cache=templates&id=\",\r\n          \"fileTransferFolder\": \"/usr/local/tomcat/webapps/content/fileTransferFolder\",\r\n          \"lookInContext\": 1,\r\n          \"adminGroupID\": 4,\r\n          \"betaServer\": true\r\n        }\r\n      }],\r\n    \"servlet-mapping\": {\r\n      \"cofaxCDS\": \"/\",\r\n      \"cofaxEmail\": \"/cofaxutil/aemail/*\",\r\n      \"cofaxAdmin\": \"/admin/*\",\r\n      \"fileServlet\": \"/static/*\",\r\n      \"cofaxTools\": \"/tools/*\"\r\n    },\r\n\r\n    \"taglib\": {\r\n      \"taglib-uri\": \"cofax.tld\",\r\n      \"taglib-location\": \"/WEB-INF/tlds/cofax.tld\"\r\n    }\r\n  }\r\n}\r\n\r\nexport function getApplicationData(clientId: any, applicationName: any) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(data);\r\n    }, 2000)\r\n  });\r\n}","export enum DATA_TYPES  {\r\n  MASTER_DATA,\r\n  CLIENT_DATA\r\n}","import React from 'react';\r\nimport { IMasterClientSelectorProps } from './IMasterClientSelector';\r\n\r\nexport class MasterClientSelector extends React.Component<IMasterClientSelectorProps, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 text-center\">\r\n          <button\r\n            onClick={() => this.props.onMasterSelect()}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-info\"\r\n          >\r\n            { this.props.masterButtonText }\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-12 mt-4 text-center\">\r\n          <button\r\n            onClick={() => this.props.onClientSelect()}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-info\"\r\n          >\r\n            { this.props.clientButtonText }\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { getApplicationData } from '../../apis/applicationDataApi';\r\nimport { Result, Error } from '../ApplicationData/ApplicationData'\r\n\r\nexport class MasterData extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      isFetching: false,\r\n      error: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMasterData();\r\n  }\r\n\r\n  getMasterData() {\r\n    this.setState({\r\n      isFetching: true,\r\n      result: null,\r\n      error: null\r\n    })\r\n    getApplicationData('', this.props.selectedApplication.applicationName)\r\n      .then((data: any) => {\r\n        this.setState({\r\n          data: data,\r\n          isFetching: false,\r\n          error: null\r\n        })\r\n      })\r\n      .catch((e) => {\r\n        this.setState({\r\n          data: null,\r\n          isFetching: false,\r\n          error: e\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return this.state.data ?\r\n      (<Result data={this.state.data} />)\r\n      : this.state.isFetching ?\r\n        (<div className=\"alert alert-primary\" role=\"alert\">\r\n          Fetching data...\r\n        </div>)\r\n        : this.state.error ? (<Error />) : null\r\n\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { getApplicationData } from '../../apis/applicationDataApi';\r\nimport JSONPretty from 'react-json-pretty';\r\nimport 'react-json-pretty/themes/monikai.css';\r\nimport { MasterClientSelector } from '../MasterClientSelector/MasterClientSelector';\r\nimport { MasterData } from '../MasterData/MasterData';\r\nimport { DATA_TYPES } from '../../config/constants';\r\n\r\nconst Form = React.forwardRef((props: any, ref: any) => {\r\n  return (\r\n    <form onSubmit={(event) => {\r\n      props.onSubmit();\r\n      event.preventDefault();\r\n    }}>\r\n      <div className=\"input-group input-group-lg mb-3\">\r\n        <input type=\"text\" ref={ref} className=\"form-control\" placeholder=\"Enter client Id\" />\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">Search</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n})\r\n\r\nexport function Result(props: any) {\r\n  return (\r\n    <div style={{ textAlign: 'left', overflowY: 'scroll', maxHeight: window.innerHeight }}>\r\n      <JSONPretty id=\"json-pretty\" data={props.data}></JSONPretty>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function Error(props: any) {\r\n  return (\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      An error occurred\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default class ApplicationData extends Component<any, any>{\r\n  public ref: any;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      clientId: null,\r\n      result: null,\r\n      isLoadingResult: false,\r\n      dataType: null\r\n    }\r\n    this.ref = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any) {\r\n    if (this.props.selectedApplication.applicationName !== prevProps.selectedApplication.applicationName) {\r\n      this.setState({\r\n        clientId: null,\r\n        result: null,\r\n        isLoadingResult: false,\r\n        dataType: null\r\n      })\r\n    }\r\n  }\r\n\r\n  handleFormSubmit() {\r\n    this.setState({\r\n      isLoadingResult: true,\r\n      result: null,\r\n      error: null\r\n    })\r\n    getApplicationData(this.ref.current.value, this.props.selectedApplication.applicationName)\r\n      .then((data: any) => {\r\n        this.setState({\r\n          result: data,\r\n          isLoadingResult: false,\r\n          error: null\r\n        })\r\n      })\r\n      .catch((e) => {\r\n        this.setState({\r\n          result: null,\r\n          isLoadingResult: false,\r\n          error: e\r\n        })\r\n      })\r\n  }\r\n\r\n  setDataType(dataType: DATA_TYPES) {\r\n    this.setState({\r\n      dataType\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\r\n          this.state.dataType === null ?\r\n            (\r\n              <MasterClientSelector\r\n                clientButtonText=\"Get client data\"\r\n                masterButtonText=\"Get master data\"\r\n                onClientSelect={() => { this.setDataType(DATA_TYPES.CLIENT_DATA) }}\r\n                onMasterSelect={() => { this.setDataType(DATA_TYPES.MASTER_DATA) }}\r\n              />\r\n            )\r\n            : this.state.dataType === DATA_TYPES.MASTER_DATA ?\r\n              (<MasterData selectedApplication={this.props.selectedApplication}/>)\r\n              : (\r\n                <>\r\n                  <Form\r\n                    ref={this.ref}\r\n                    onSubmit={() => { this.handleFormSubmit() }}\r\n                  />\r\n                  {\r\n                    this.state.result ?\r\n                      (<Result data={this.state.result} />)\r\n                      : this.state.isLoadingResult ?\r\n                        (<div className=\"alert alert-primary\" role=\"alert\">\r\n                          Fetching data...\r\n                        </div>)\r\n                        : this.state.error ? (<Error />) : null\r\n                  }\r\n                </>\r\n              )\r\n        }\r\n      </>\r\n    )\r\n\r\n\r\n  }\r\n}","import React from 'react';\r\nimport { EnvironmentContext } from './EnvironmentContext';\r\n\r\nexport default function (WrappedComponent: React.ComponentType<any>) {\r\n  return function() {\r\n    return (\r\n      <EnvironmentContext.Consumer>\r\n        {\r\n          ({ environment }) => (\r\n            <WrappedComponent environment={environment} />\r\n          )\r\n        }\r\n      </EnvironmentContext.Consumer>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { getApplications } from '../../apis/applicationsApi';\r\nimport ApplicationList from '../../components/ApplicationList/ApplicationList';\r\nimport ApplicationData from '../../components/ApplicationData/ApplicationData';\r\nimport withEnvironment from '../../components/EnvironmentList/withEnvironment';\r\nimport { IMainPageProps } from './IMainPage';\r\n\r\nexport class MainPage extends Component<IMainPageProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      applications: [],\r\n      applicationData: null,\r\n      isLoadingApplications: true,\r\n      selectedApplication: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    getApplications()\r\n      .then((data: any) => {\r\n        data = data.slice();\r\n        this.setState({\r\n          isLoadingApplications: false,\r\n          applications: data\r\n        })\r\n      })\r\n      .catch(() => { })\r\n  }\r\n\r\n  handeApplicationSelect(application: any) {\r\n    this.setState({\r\n      selectedApplication: { ...application }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          {\r\n            this.state.isLoadingApplications ? (\r\n              <div className=\"col-md-12\">\r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                  Fetching applications...\r\n                </div>\r\n              </div>)\r\n              : (\r\n                <>\r\n                  <div className=\"col-md-4\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\"> Applications </div>\r\n                      <div className=\"card-body\">\r\n                        <ApplicationList\r\n                          applications={this.state.applications}\r\n                          selectedApplication={this.state.selectedApplication}\r\n                          handeApplicationSelect={(arg: any) => { this.handeApplicationSelect(arg) }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                    {\r\n                      this.state.selectedApplication ?\r\n                        (\r\n                          <div className=\"card\">\r\n                            <div className=\"card-header\">{this.state.selectedApplication.applicationName}</div>\r\n                            <div className=\"card-body\">\r\n                              <ApplicationData\r\n                                selectedApplication={this.state.selectedApplication}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                        : null\r\n                    }\r\n                  </div>\r\n                </>\r\n              )\r\n          }\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withEnvironment(MainPage);","export function getApplications() {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      let data = [];\r\n      for (let i = 0; i < 20; i++) {\r\n        data.push({\r\n          applicationName: `Application ${i+1}`,\r\n          otherData: \"Other-data\"\r\n        })\r\n      }\r\n      resolve(data);\r\n    }, 1000)\r\n  });\r\n}","import MainPage from '../pages/Get/MainPage';\r\nimport CreatePage from '../pages/Create/CreatePage';\r\n\r\nexport const routes = [{\r\n  path: '/get',\r\n  component: MainPage,\r\n  label: 'Get'\r\n}, {\r\n  path: '/create',\r\n  component: CreatePage,\r\n  label: 'Create'\r\n}, {\r\n  path: '/update',\r\n  component: MainPage,\r\n  label: 'Update'\r\n}, {\r\n  path: '/delete',\r\n  component: MainPage,\r\n  label: 'Delete'\r\n}];\r\n","import React from 'react';\r\nimport withEnvironment from '../../components/EnvironmentList/withEnvironment';\r\n\r\nexport class CreatePage extends React.Component<any, any> {\r\n  render() {\r\n    return 'Create' + this.props.environment\r\n  }\r\n}\r\n\r\nexport default withEnvironment(CreatePage);","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { routes } from '../../config/routes';\r\n\r\nexport function NavBar(props: any) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          {\r\n            routes.map((route, index) => (\r\n              <Route\r\n                key={index}\r\n                path={route.path}\r\n                children={({ match }) => (\r\n                  <li className={`nav-item ${match ? \"border border-primary rounded-lg\" : ''}`}>\r\n                    <span className=\"nav-link\"><Link to={route.path}>{route.label}</Link></span>\r\n                  </li>\r\n                )}\r\n              />\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { NavBar } from './components/NavBar/NavBar';\r\nimport { routes } from './config/routes';\r\n\r\nexport class Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          {\r\n            routes.map((route, index) => (\r\n              <Route path={route.path} key={index}>\r\n                <route.component />\r\n              </Route>\r\n            ))\r\n          }\r\n          <Route>\r\n            <Redirect to=\"/get\" />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport environments from './config/environments';\nimport { EnvironmentList } from './components/EnvironmentList/EnvironmentList';\nimport { EnvironmentContext } from './components/EnvironmentList/EnvironmentContext';\nimport { Routes } from './Routes';\nimport { IAppState } from './IApp';\nimport './App.css';\n\nexport default class App extends React.Component<any, IAppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      environment: null\n    };\n  }\n\n  handleEnvironmentSelect(selectedEnvironment: string) {\n    console.log(selectedEnvironment)\n    this.setState({\n      environment: selectedEnvironment\n    })\n  }\n\n  render() {\n    return this.state.environment ? (\n      <EnvironmentContext.Provider value={this.state}>\n        <Routes />\n      </EnvironmentContext.Provider>\n    )\n    : (\n      <div className=\"App\">\n        <EnvironmentList\n          environments={environments}\n          onEnvironmentSelect={(selectedEnvironment: string) => this.handleEnvironmentSelect(selectedEnvironment)}\n        />\n      </div>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (/* process.env.NODE_ENV === 'production' &&  */'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/assets/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(registration, swUrl)\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      console.log(response.status, response.headers.get('content-type'))\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}